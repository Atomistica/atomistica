# The current set of flags is for Intel C++ (icc) and Atomistica compiled
# with Intel Fortran (ifort). See comments below for how to use the GNU
# compilers.

SHELL = /bin/sh

# ---------------------------------------------------------------------
# compiler/linker settings
# specify flags and libraries needed for your compiler

CC =		mpic++
CCFLAGS =	-g -O3 -xHost -funroll-loops -unroll-aggressive -no-prec-sqrt -fstrict-aliasing
SHFLAGS =	-fPIC
DEPFLAGS =	-M

LINK =		mpic++
LINKFLAGS =	-g -O3
LIB =           -lstdc++
SIZE =		size

ARCHIVE =	ar
ARFLAGS =	-rcsv
SHLIBFLAGS =	-shared

# ---------------------------------------------------------------------
# LAMMPS-specific settings
# specify settings for LAMMPS features you will use
# if you change any -D setting, do full re-compile after "make clean"

# LAMMPS ifdef settings, OPTIONAL
# see possible settings in doc/Section_start.html#2_2 (step 4)

LMP_INC =	-DLAMMPS_GZIP

# MPI library, REQUIRED
# see discussion in doc/Section_start.html#2_2 (step 5)
# can point to dummy MPI library in src/STUBS as in Makefile.serial
# INC = path for mpi.h, MPI compiler settings
# PATH = path for MPI library
# LIB = name of MPI library

MPI_INC =       
MPI_PATH = 
MPI_LIB =	

# FFT library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 6)
# can be left blank to use provided KISS FFT library
# INC = -DFFT setting, e.g. -DFFT_FFTW, FFT compiler settings
# PATH = path for FFT library
# LIB = name of FFT library

FFT_INC = -DFFT_FFTW3 -I/usr/local/fftw/3.3-a1/double/include
FFT_PATH = 
FFT_LIBS = -L/usr/local/fftw/3.3-a1/double/lib -lfftw3

# JPEG library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 7)
# only needed if -DLAMMPS_JPEG listed with LMP_INC
# INC = path for jpeglib.h
# PATH = path for JPEG library
# LIB = name of JPEG library

JPG_INC =       
JPG_PATH = 	
JPG_LIB =	

# LAPACK libraries
# The following lines should work for Intel MKL
LAPACK_INC = $(MKLROOT)/include -DHAVE_MKL
LAPACK_PATH = #-L$(MKLROOT)/lib/intel64
#LAPACK_LIB = -mkl=parallel
LAPACK_LIB = -mkl=sequential
# Alternatively, use default LAPACK
#LAPACK_INC =
#LAPACK_PATH =
#LAPACK_LIB = -llapack -lblas

# ATOMISTICA stuff
ATOMISTICA_ROOT = $(HOME)/Sources/atomistica
ATOMISTICA_INC = -I$(ATOMISTICA_ROOT)/build_lammps -I$(ATOMISTICA_ROOT)/src/support
ATOMISTICA_PATH = -L$(ATOMISTICA_ROOT)/build_lammps
# The following lines should work for the Intel compilers
ATOMISTICA_LIB = -latomistica -lifcore -lifport -lmpi_f77
# For gcc/gfortran use
#ATOMISTICA_LIB = -latomistica -lgfortran

# ---------------------------------------------------------------------
# build rules and dependencies
# no need to edit this section

include	Makefile.package.settings
include	Makefile.package

EXTRA_INC = $(LMP_INC) $(PKG_INC) $(MPI_INC) $(FFT_INC) $(JPG_INC) $(PKG_SYSINC) $(ATOMISTICA_INC)
EXTRA_PATH = $(PKG_PATH) $(MPI_PATH) $(FFT_PATH) $(JPG_PATH) $(PKG_SYSPATH) $(ATOMISTICA_PATH) $(LAPACK_PATH)
EXTRA_LIB = $(PKG_LIB) $(MPI_LIB) $(FFT_LIB) $(JPG_LIB) $(PKG_SYSLIB) $(ATOMISTICA_LIB) $(LAPACK_LIB)

# Path to src files

vpath %.cpp ..
vpath %.h ..

# Link target

$(EXE):	$(OBJ)
	$(LINK) $(LINKFLAGS) $(EXTRA_PATH) $(OBJ) $(EXTRA_LIB) $(LIB) -o $(EXE)
	$(SIZE) $(EXE)

# Library targets

lib:	$(OBJ)
	$(ARCHIVE) $(ARFLAGS) $(EXE) $(OBJ)

shlib:	$(OBJ)
	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o $(EXE) \
        $(OBJ) $(EXTRA_LIB) $(LIB)

# Compilation rules

%.o:%.cpp
	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

%.d:%.cpp
	$(CC) $(CCFLAGS) $(EXTRA_INC) $(DEPFLAGS) $< > $@

# Individual dependencies

DEPENDS = $(OBJ:.o=.d)
sinclude $(DEPENDS)
